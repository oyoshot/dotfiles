########################################
# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# Ctrl+Dでzshを終了しない
setopt ignore_eof

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 高機能なワイルドカード展開を使用する
setopt extended_glob

# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

########################################
# キーバインド

# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward

bindkey '^[' _ghq-fzf
function _ghq-fzf() {
  local src=$(ghq list --full-path --vcs git | fzf-tmux -p 90%,90% )
  if [ -n "$src" ]; then
    BUFFER="cd \"$src\""
    zle accept-line
  fi

  zle -R -c
}
zle -N _ghq-fzf

function awsc() {
  local src=$(aws-vault list --profiles | fzf-tmux -p 90%,90%)
  if [ -n "$src" ]; then
    aws-vault exec -n $src
  fi
}

function cdd() {
  local directory=$(
    fd -t d \
    | fzf-tmux -p 90%,90%
  )
  if [ -n "$directory" ]; then
      cd $directory
  fi
}

function gitc() {
  local branch=$(
    git branch -a \
    | fzf-tmux \
      -p 90%,90% \
      --ansi \
      --exit-0 \
      --layout=reverse \
      --info=hidden \
      --no-multi \
      --preview-window="right,65%" \
      --preview="echo {} | tr -d ' *' | xargs git lg --color=always" \
    | head -n 1 \
    | perl -pe "s/\s//g; s/\*//g; s/remotes\/origin\///g"
  )
  if [ -n "$branch" ]; then
    git switch $branch
  fi
}

function gitl() {
  local commit_id=$(
    git lg --color=always \
    | fzf-tmux \
      -p 90%,90% \
      --ansi \
      --no-sort \
      --reverse \
      --tiebreak=index \
      --preview-window="right,70%" \
      --preview="echo {} | grep -o '[a-f0-9]\{7\}' | xargs git show --color=always" \
    | grep -o '[a-f0-9]\{7\}'
  )
  if [ -n "$commit_id" ]; then
      git show $commit_id
  fi
}

########################################
# エイリアス

# nvim
alias v='nvim'
alias n='nvim'
alias vi='n'

alias ls='eza --icons'
alias l='ls -l --header --git --group'
alias la='ls -a'
alias lt='ls --tree'
alias lla='ls -la --header --git --group'

alias cat='bat --theme ansi'

#alias rm='rm -i'
#alias cp='cp -i'
#alias mv='mv -i'

alias mkdir='mkdir -p'

alias c='clear'

alias e='exit'

# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '

# グローバルエイリアス
alias -g L='| less'
alias -g G='| grep'

# C で標準出力をクリップボードにコピーする
# mollifier delta blog : http://mollifier.hatenablog.com/entry/20100317/p1
if which pbcopy >/dev/null 2>&1 ; then
    # Mac
    alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
    # Linux
    alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
    # Cygwin
    alias -g C='| putclip'
fi

# tar
tgz() {
  env COPYFILE_DISABLE=1 tar zcvf "$1" --exclude=".DS_Store" "${@:2}"
}

# ls color
if grep -qE "(Microsoft|WSL)" /proc/version &> /dev/null ; then
  LS_COLORS="${LS_COLORS}:ow=01;34"; export LS_COLORS
  export PATH=$PATH:/mnt/c/windows
  alias II='explorer.exe'
fi

# Homebrew
export PATH="/opt/homebrew/bin:$PATH"

# fpath
fpath=(
  $ZDOTDIR/fpath(N-/)
  $ZDOTDIR/plugins/zsh-completions/src(N-/)
  $ZDOTDIR/zfunc(N-/)
  $ZDOTDIR/plugins/anyframe(N-/)
  ~/.asdf/completions(N-/)

  $fpath
)

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  # Java
  export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"

  # rip
  export GRAVEYARD="~/.Trash"
fi

# zsh-defer
source $ZDOTDIR/plugins/zsh-defer/zsh-defer.plugin.zsh

# load configs
for f ($ZDOTDIR/sync/*(N-.)) source $f
for f ($ZDOTDIR/defer/*(N-.)) zsh-defer source $f

# plugins
zsh-defer source $ZDOTDIR/plugins/autosuggestions/zsh-autosuggestions.zsh
zsh-defer source $ZDOTDIR/plugins/syntax-highlighting/zsh-syntax-highlighting.zsh
zsh-defer source $ZDOTDIR/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
zsh-defer source $ZDOTDIR/fpath/aws_zsh_completer.sh
zsh-defer source $XDG_CONFIG_HOME/op/plugins.sh

# anyframe
autoload -Uz anyframe-init && anyframe-init

## load user .zshrc configuration file
if [ -f ${HOME}/.zshrc.mine ]; then
    source ${HOME}/.zshrc.mine
fi

autoload -Uz compinit && compinit

# Rust
source "$HOME/.cargo/env"

# Shell
eval "$(starship init zsh)"

# zoxide
eval "$(zoxide init zsh)"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# mise
eval "$(mise activate zsh)"

# GPG
export GPG_TTY=$TTY

# Start tmux if it's not running
if [ -z "$TMUX" ]; then
  cd
  exec tmux
fi
